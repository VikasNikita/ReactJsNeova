{"ast":null,"code":"var _jsxFileName = \"/home/nikita/Desktop/ReactApp/nav-app/src/PostComponent.js\";\nimport axios from \"axios\";\nimport { Component } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default class PostComponent extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      posts: [],\n      postObj: {\n        title: \"\",\n        body: \"\",\n        userId: 1\n      }\n    };\n\n    this.onClickHandler = id => {\n      axios.delete(\"https://jsonplaceholder.typicode.com/posts/\" + id).then(response => {\n        console.log(response);\n        this.FetchMethod();\n        alert(\"Deleted\");\n      });\n    };\n\n    this.onChangeHandler = event => {\n      const {\n        name,\n        value\n      } = event.target;\n      const postObjectCopy = this.state.postObj;\n      postObjectCopy[name] = value;\n      this.setState({\n        postObj: postObjectCopy\n      });\n    };\n\n    this.onEditClickHandler = id => {\n      const editObject = this.state.posts.find(post => post.id === id);\n\n      if (editObject) {\n        this.setState({\n          postObj: editObject\n        });\n      }\n    };\n\n    this.onFormSubmitClick = event => {\n      event.preventDefault();\n      console.log(this.state);\n      axios.post(\"https://jsonplaceholder.typicode.com/posts\", this.state.postObj).then(response => {\n        console.log(response);\n        this.FetchMethod();\n        alert(\"Created\");\n        this.setState({\n          postObj: {\n            title: \"\",\n            body: \"\",\n            userId: 1\n          }\n        });\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"In Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.onFormSubmitClick,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"title\",\n          value: this.state.postObj.title,\n          onChange: this.onChangeHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Body\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"body\",\n          value: this.state.postObj.body,\n          onChange: this.onChangeHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), this.state.posts.map((post, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [index + 1, \".\", post.title]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            this.onClickHandler(post.id);\n          },\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 21\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 21\n      }, this))]\n    }, void 0, true);\n  }\n\n  componentDidMount() {\n    this.FetchMethod();\n  }\n\n  FetchMethod() {\n    axios.get(\"https://jsonplaceholder.typicode.com/posts\").then(response => {\n      console.log(response.data);\n      this.setState({\n        posts: response.data\n      });\n    });\n  }\n\n}","map":{"version":3,"sources":["/home/nikita/Desktop/ReactApp/nav-app/src/PostComponent.js"],"names":["axios","Component","PostComponent","state","posts","postObj","title","body","userId","onClickHandler","id","delete","then","response","console","log","FetchMethod","alert","onChangeHandler","event","name","value","target","postObjectCopy","setState","onEditClickHandler","editObject","find","post","onFormSubmitClick","preventDefault","render","map","index","componentDidMount","get","data"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport { Component } from \"react\";\n\nexport default class PostComponent extends Component\n{\n    state={\n        posts:[],\n        postObj:{\n            title:\"\",\n            body:\"\",\n            userId:1,\n        },\n    };\n    onClickHandler=(id)=>{\n        axios.delete(\"https://jsonplaceholder.typicode.com/posts/\" +id).then((response)=>{\n            console.log(response);\n            this.FetchMethod();\n            alert(\"Deleted\");\n        });\n    }\n    onChangeHandler = (event) => \n    {\n        const {name,value} =event.target;\n        const postObjectCopy=this.state.postObj;\n        postObjectCopy[name]=value;\n        this.setState({postObj:postObjectCopy});\n    };\n    onEditClickHandler =(id) =>{\n        const editObject=this.state.posts.find((post) => post.id=== id);\n        if(editObject){\n            this.setState({postObj:editObject});\n        }\n    };\n    onFormSubmitClick = (event) =>{\n        event.preventDefault();\n        console.log(this.state);\n        axios.post(\"https://jsonplaceholder.typicode.com/posts\",this.state.postObj).then((response)=>{\n            console.log(response);\n            this.FetchMethod();\n            alert(\"Created\");\n            this.setState({\n                postObj:{\n                    title:\"\",\n                    body:\"\",\n                    userId:1,\n                },\n            });\n        })\n    };\n    render()\n    {\n        return(\n        \n            <>\n                <h1>In Post</h1>\n                <form onSubmit={this.onFormSubmitClick}>\n\n                    <label >Title</label>\n\n                    <input name=\"title\"\n                    value={this.state.postObj.title}\n                    onChange={this.onChangeHandler}/>\n\n                    <label>Body</label>\n\n                    <input name=\"body\"\n                    value={this.state.postObj.body}\n                    onChange={this.onChangeHandler}/>\n\n                    <button type=\"submit\">Submit</button>\n\n                </form>\n\n                {this.state.posts.map((post,index)=> (\n                    <div key={index}>\n                        <div>\n                            {index+1}.{post.title}\n                            {/* <br/>\n                            {index+1}.{post.body} */}\n                        </div>\n\n                        <br/>\n                        \n                        <button onClick={()=>{\n                    this.onClickHandler(post.id);\n                }}\n                >\n                    Delete</button>\n\n                    <button></button>\n\n\n                    </div>\n                ))}\n              \n            </>\n        )\n    }\n    componentDidMount()\n    {\n        this.FetchMethod();\n       \n    }\n\n    FetchMethod() {\n        axios.get(\"https://jsonplaceholder.typicode.com/posts\").then((response) => {\n            console.log(response.data);\n            this.setState({ posts: response.data });\n        });\n    }\n}"]},"metadata":{},"sourceType":"module"}